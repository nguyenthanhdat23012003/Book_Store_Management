-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    name character varying NOT NULL,
    email character varying NOT NULL,
    email_verified_at date DEFAULT null,
    password character varying NOT NULL,
    remember_token character varying NOT NULL DEFAULT null,
    role character varying NOT NULL,
    created_at date DEFAULT null,
    updated_at date DEFAULT null,
    blocked_at date DEFAULT null,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id serial NOT NULL,
    type integer NOT NULL,
    name character varying NOT NULL,
    description character varying,
    price double precision NOT NULL,
    in_stock integer NOT NULL,
    genre character,
    created_at date,
    updated_at date,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.books
(
    id serial NOT NULL,
    product_id integer NOT NULL,
    authors character varying[] NOT NULL,
    cover_type character varying NOT NULL,
    publisher character varying NOT NULL,
    number_of_pages integer,
    language character varying,
    publication_date date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."CDs"
(
    id serial NOT NULL,
    product_id integer NOT NULL,
    albums character varying[] NOT NULL,
    collections character varying[] NOT NULL,
    artists character varying[] NOT NULL,
    record_label character varying NOT NULL,
    track_list character varying NOT NULL,
    release_date date,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."DVDs"
(
    id serial NOT NULL,
    product_id integer NOT NULL,
    disc_type character varying NOT NULL,
    director character varying NOT NULL,
    runtime bigint NOT NULL,
    studio character varying NOT NULL,
    language character varying NOT NULL,
    subtitle character varying NOT NULL,
    release_date date,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.carts
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    total_cost double precision NOT NULL,
    created_at date,
    updated_at date,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cart_items
(
    id serial NOT NULL,
    cart_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    id serial NOT NULL,
    cart_id integer NOT NULL,
    user_id integer NOT NULL,
    shipping_fee double precision NOT NULL,
    freeship_discount double precision NOT NULL DEFAULT 0,
    total_cost double precision NOT NULL,
    delivery_option character varying NOT NULL DEFAULT normal,
    status character varying,
    created_at date,
    updated_at date,
    cancel_at date,
    completed_at date,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.deliveries
(
    id serial NOT NULL,
    order_id integer NOT NULL,
    phone_number character varying NOT NULL,
    province character varying NOT NULL,
    address character varying NOT NULL,
    status character varying,
    completed_at date,
    rejected_at date,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payment_details
(
    id serial NOT NULL,
    order_id integer NOT NULL,
    payment_method character varying NOT NULL,
    total_payment double precision NOT NULL,
    payment_time date NOT NULL,
    created_at date,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.books
    ADD FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."CDs"
    ADD FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."DVDs"
    ADD FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.carts
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_items
    ADD FOREIGN KEY (cart_id)
    REFERENCES public.carts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_items
    ADD FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD FOREIGN KEY (cart_id)
    REFERENCES public.carts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.deliveries
    ADD FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payment_details
    ADD FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;